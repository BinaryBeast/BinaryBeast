{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Binarybeast","google":"","body":"## BinaryBeast API Ruby Gem\r\n\r\nThis Gem lets you access the Binarybeast API in an easy way. It was extracted from the Source Code of [Gamkoi.com](http://www.gamkoi.com).\r\n\r\n### How to install\r\n\r\n`gem install binarybeast`\r\n\r\n`bundle install`\r\n\r\n### How to use\r\nFirst, you should set your apikey, like this:\r\n\r\n`Binarybeast.apikey = \"123456778\"`\r\n\r\nanyway, we contributed the APIKey from us as a default. And you could give a tourney a direct apikey, so you don't need to bother that much about this.\r\n\r\nAfter that, depending on your intention you should use\r\n\r\n`@tourney = Binarybeast::Tourney.new(:title => \"Test\")`\r\n\r\nto create a new Tournament on BinaryBeast\r\nor\r\n\r\n`@tourney = Binarybeast::Tourney.new(:tourneyid => \"xSC21212194\")`\r\n\r\nif you want to fetch an existing tournament\r\n\r\n\r\n### If you want to create a new Tournament on BinaryBeast, heres what you do:\r\n\r\n`@tourney = Binarybeast::Tourney.new(:title => \"Gamkoi DevTest, :description => \"Gamkoi Dev Test\")`\r\n\r\n`@tourney.create`\r\n\r\nyour tournament is now on binary beast! Congratz!\r\n\r\n### If you want to fetch an existing Tournament on BinaryBeast, heres what you do:\r\n\r\n`@tourney = Binarybeast::Tourney.new(:tourneyid => \"xSC21212194\")`\r\n\r\n`@tourney.load`\r\n\r\n### Credits\r\n\r\nThis Gem was created by [Crispin Sch√§ffler](https://github.com/cschaeffler/binarybeast) for public use. It was extracted from the [Gamkoi.com](http://www.gamkoi.com) Source Code.","tagline":"Gem to access the BinaryBeast.com API with a Ruby Gem."}